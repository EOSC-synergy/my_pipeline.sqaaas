RADL([ description(kubernetes, [kind = 'main', short = 'Install and configure a cluster using the grycap.kubernetes ansible role.', content = 'The template installs the grycap.kubernetes ansible role. Initially the template creates as many working node hostnames as the sum of the values of feature "ec3_max_instances_max" in every system.\n\nWebpage: https://kubernetes.io/'], reference=False, line=2), network(public, [outbound = 'yes', outports contains '6443/tcp', outports contains '443/tcp', outports contains '80/tcp'], reference=False, line=8), network(private, [], reference=False, line=16), system(front, [cpu.count >= 2, memory.size >= 4294967296, net_interface.0.connection = 'private', net_interface.0.dns_name = 'kubeserver', net_interface.1.connection = 'public', net_interface.1.dns_name = 'kubeserverpublic', queue_system = 'kubernetes', ec3_templates contains 'kubernetes', disk.0.applications contains Features([name = 'ansible.modules.grycap.kubernetes']), disk.0.applications contains Features([name = 'ansible.modules.grycap.clues']), disk.0.image.url = 'ost://api.cloud.ifca.es/a309f7ac-2198-4ecf-9fb9-ff68c2197143'], reference=False, line=18), configure(front, [{'vars': {'KUBE_TOKEN': "{{ lookup('password', '/var/tmp/kube_token chars=ascii_letters,digits') }}", 'AUTH': {'ec3_xpath': '/system/front/auth'}, 'SYSTEMS': {'ec3_jpath': '/system/*'}, 'NNODES': '{{ SYSTEMS | selectattr("ec3_max_instances_max", "defined") | sum(attribute="ec3_max_instances_max") }}'}, 'pre_tasks': [{'name': 'Create auth file dir', 'file': 'path=/etc/kubernetes/pki state=directory mode=755 recurse=yes'}, {'name': 'Create auth data file with an admin user', 'copy': 'content=\'{{ KUBE_TOKEN }},kubeadmin,100,"users,system:masters"\' dest=/etc/kubernetes/pki/auth mode=600'}], 'roles': [{'role': 'grycap.kubernetes', 'kube_server': 'kubeserver', 'kube_apiserver_options': [{'option': '--token-auth-file', 'value': '/etc/kubernetes/pki/auth'}, {'option': '--service-node-port-range', 'value': '80-32767'}], 'kube_api_server': '{{ IM_NODE_PRIVATE_IP }}', 'kube_apply_repos': [], 'kube_version': '1.23.4', 'kube_deploy_dashboard': True, 'kube_install_ingress': True}, {'role': 'grycap.clues', 'auth': '{{AUTH}}', 'clues_queue_system': 'kubernetes', 'max_number_of_nodes': '{{ NNODES }}', 'vnode_prefix': 'wn', 'KUBERNETES_TOKEN': '{{ KUBE_TOKEN }}'}]}]), system(wn, [memory.size >= 4294967296, net_interface.0.connection = 'private', ec3_node_type = 'wn', disk.0.image.url = 'ost://api.cloud.ifca.es/a309f7ac-2198-4ecf-9fb9-ff68c2197143'], reference=False, line=72), configure(wn, [{'roles': [{'role': 'grycap.kubernetes', 'kube_type_of_node': 'wn', 'kube_server': 'kubeserver', 'kube_version': '1.23.4'}]}]), include(kube_misc, [template = 'openports im'], reference=False, line=90), <IM2.radl.radl.deploy object at 0x7fddede78b50> ])